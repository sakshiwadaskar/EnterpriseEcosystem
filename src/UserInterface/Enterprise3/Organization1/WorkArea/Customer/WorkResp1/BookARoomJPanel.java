/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Enterprise3.Organization1.WorkArea.Customer.WorkResp1;

import TheBusiness.BookingManagement.Booking;
import TheBusiness.BookingManagement.Room;
import TheBusiness.Business.Business;
import TheBusiness.CustomerManagement.CustomerProfile;
import TheBusiness.ProductManagement.Product;
import UserInterface.Enterprise3.Organization1.WorkArea.Customer.CustomerLandingPageJPanel;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aadityakasbekar
 */
public class BookARoomJPanel extends javax.swing.JPanel {

    Business business;
    javax.swing.JPanel CardSequencePanel;
    CustomerProfile customerProfile;

    /**
     * Creates new form BookARoomJPanel
     */
    public BookARoomJPanel(Business b, CustomerProfile cp, JPanel clp) {
        initComponents();
        this.business = b;
        this.customerProfile = cp;
        this.CardSequencePanel = clp;
        populateTable();

    }

    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblRooms.getModel();
        dtm.setRowCount(0);
        for (Room room : business.getHotelRoomDirectory().getRoomList()) {
            Object[] row = new Object[7];
            row[0] = room.getRoomId();
            row[1] = room.getRoomType();
            row[2] = room.getRoomPrice();
            row[3] = room.getAvailability();

            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSubTitle1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRooms = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBookings = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtRoomQT = new javax.swing.JTextField();
        btnAddRoom = new javax.swing.JButton();
        btnConfirmBooking = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 0, 0));
        setMinimumSize(new java.awt.Dimension(1000, 600));
        setPreferredSize(new java.awt.Dimension(1000, 600));

        lblSubTitle1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblSubTitle1.setForeground(new java.awt.Color(255, 255, 255));
        lblSubTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSubTitle1.setText("View All Rooms");

        jScrollPane1.setFont(new java.awt.Font("Times New Roman", 0, 10)); // NOI18N

        tblRooms.setFont(new java.awt.Font("Times New Roman", 0, 10)); // NOI18N
        tblRooms.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Room ID", "Room Type", "Room Tariff", "Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRooms);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("My bookings");

        jScrollPane2.setFont(new java.awt.Font("Times New Roman", 0, 10)); // NOI18N

        tblBookings.setFont(new java.awt.Font("Times New Roman", 0, 10)); // NOI18N
        tblBookings.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Room ID", "Room Type", "Room Tariff", "Number of Rooms"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblBookings);
        if (tblBookings.getColumnModel().getColumnCount() > 0) {
            tblBookings.getColumnModel().getColumn(0).setHeaderValue("Room ID");
            tblBookings.getColumnModel().getColumn(1).setHeaderValue("Room Type");
            tblBookings.getColumnModel().getColumn(2).setHeaderValue("Room Tariff");
            tblBookings.getColumnModel().getColumn(3).setHeaderValue("Number of Rooms");
        }

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Enter no. of rooms");

        txtRoomQT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRoomQTActionPerformed(evt);
            }
        });

        btnAddRoom.setBackground(new java.awt.Color(0, 153, 255));
        btnAddRoom.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnAddRoom.setForeground(new java.awt.Color(255, 255, 255));
        btnAddRoom.setText("Add Room");
        btnAddRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRoomActionPerformed(evt);
            }
        });

        btnConfirmBooking.setBackground(new java.awt.Color(0, 153, 255));
        btnConfirmBooking.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnConfirmBooking.setForeground(new java.awt.Color(255, 255, 255));
        btnConfirmBooking.setText("Confirm Booking");
        btnConfirmBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmBookingActionPerformed(evt);
            }
        });

        btnBack.setBackground(java.awt.Color.pink);
        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnConfirmBooking)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSubTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtRoomQT)
                    .addComponent(btnAddRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(911, 911, 911))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(lblSubTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtRoomQT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAddRoom)))
                .addGap(40, 40, 40)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnConfirmBooking)
                .addGap(29, 29, 29)
                .addComponent(btnBack)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmBookingActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) tblBookings.getModel();
        Object[] columnData = new Object[tblBookings.getRowCount()];  // One entry for each row
        Object[] rowData = new Object[tblBookings.getRowCount()];

        Booking booking = new Booking(String.valueOf(business.getHotelRoomBookings().getBookingList().size() + 1000), customerProfile);

        for (int i = 0; i < tblBookings.getRowCount(); i++) {  // Loop through the rows

            String roomId = (String) tblBookings.getValueAt(i, 0);
            System.out.println(roomId);
            if (roomId == "" || roomId == null) {
                continue;
            }

            Room foundRoom = business.getHotelRoomDirectory().findRoom(roomId);
            booking.addRoomBooked(foundRoom, Integer.parseInt((String) tblBookings.getValueAt(i, 3)));
            foundRoom.setAvailability(foundRoom.getAvailability() - Integer.parseInt(txtRoomQT.getText()));
        }

        business.getHotelRoomBookings().addBooking(booking);
        populateTable();
    }//GEN-LAST:event_btnConfirmBookingActionPerformed

    private void txtRoomQTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRoomQTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRoomQTActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).previous(CardSequencePanel);
        CustomerLandingPageJPanel customerLandingPagePanel = new CustomerLandingPageJPanel(business, customerProfile, CardSequencePanel);
        CardSequencePanel.removeAll();
        CardSequencePanel.add("CustomerLandingPageJPanel", customerLandingPagePanel);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRoomActionPerformed

        if (txtRoomQT.getText().equals("") || txtRoomQT.getText() == null) {
            JOptionPane.showMessageDialog(null, "Please enter room quantity",
                "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int roomQty = Integer.parseInt(txtRoomQT.getText());

        int roomsTableSize = tblRooms.getRowCount();
        int selectedrow = tblRooms.getSelectionModel().getLeadSelectionIndex();

        if (selectedrow < 0 || selectedrow > roomsTableSize - 1) {
            JOptionPane.showMessageDialog(null, "Please select a row first",
                "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int selectedRoomIndex = tblRooms.getSelectedRow();
        Room selectedRoom = business.getHotelRoomDirectory().getRoomList().get(selectedRoomIndex);
        if (roomQty > selectedRoom.getAvailability()) {
            JOptionPane.showMessageDialog(null, "Rooms not available, check availability first",
                "Warning", JOptionPane.WARNING_MESSAGE);
            return;

        }
        if (selectedRoom == null) {
            return;
        } else {
            Object[] row = new Object[5];
            row[0] = selectedRoom.getRoomId();
            row[1] = selectedRoom.getRoomType();
            row[2] = selectedRoom.getRoomPrice();
            row[3] = txtRoomQT.getText();
            ((DefaultTableModel) tblBookings.getModel()).addRow(row);
        }

    }//GEN-LAST:event_btnAddRoomActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRoom;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnConfirmBooking;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblSubTitle1;
    private javax.swing.JTable tblBookings;
    private javax.swing.JTable tblRooms;
    private javax.swing.JTextField txtRoomQT;
    // End of variables declaration//GEN-END:variables
}
