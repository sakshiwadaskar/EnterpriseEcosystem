/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Enterprise4.Organization1.WorkArea.Professor.WorkResp1;

import TheBusiness.Business.Business;
import TheBusiness.CourseManagement.Course;
import TheBusiness.CourseManagement.CourseDirectory;
import TheBusiness.EducationManagement.ProfessorProfile;
import UserInterface.Enterprise4.Organization1.WorkArea.Professor.ProfessorLandingPageJPanel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aadityakasbekar
 */
public class ManageCoursesJPanel extends javax.swing.JPanel {

    Business business;
    ProfessorProfile professorProfile;
    javax.swing.JPanel CardSequencePanel;

    /**
     * Creates a new ManageCoursesJPanel.
     *
     * @param b The Business object representing the backend system.
     * @param pp The ProfessorProfile associated with the logged-in professor.
     * @param cpl The JPanel for card layout navigation.
     */
    public ManageCoursesJPanel(Business b, ProfessorProfile pp, JPanel cpl) {
        initComponents();
        this.business = b;
        this.professorProfile = pp;
        this.CardSequencePanel = cpl;
        System.out.println("Lets Manage Courses");

        populateTable();

        txtCourseId.setText("");
        txtCourseName.setText("");
        txtSemester.setText("");
        txtCredits.setText("");
        btnSave.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        lblTitle = new javax.swing.JLabel();
        lblSubTitle1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAllCoursesTable = new javax.swing.JTable();
        lblSubTitle2 = new javax.swing.JLabel();
        lblCourseName = new javax.swing.JLabel();
        txtCourseName = new javax.swing.JTextField();
        lblCourseId = new javax.swing.JLabel();
        txtCourseId = new javax.swing.JTextField();
        lblCredits = new javax.swing.JLabel();
        txtCredits = new javax.swing.JTextField();
        lblSemester = new javax.swing.JLabel();
        txtSemester = new javax.swing.JTextField();
        btnAddCourse = new javax.swing.JButton();
        btnUpdateCourse = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnDeleteCourse = new javax.swing.JButton();

        jToolBar1.setRollover(true);

        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(0, 0, 0));
        setMinimumSize(new java.awt.Dimension(1000, 600));
        setPreferredSize(new java.awt.Dimension(1000, 600));

        lblTitle.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Manage Courses");

        lblSubTitle1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblSubTitle1.setForeground(new java.awt.Color(255, 255, 255));
        lblSubTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSubTitle1.setText("View All Courses");

        jScrollPane1.setFont(new java.awt.Font("Times New Roman", 0, 10)); // NOI18N

        tblAllCoursesTable.setFont(new java.awt.Font("Times New Roman", 0, 10)); // NOI18N
        tblAllCoursesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Course ID", "Course Name", "Credits", "Offered In", "Instructor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAllCoursesTable);

        lblSubTitle2.setBackground(new java.awt.Color(0, 153, 255));
        lblSubTitle2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblSubTitle2.setForeground(new java.awt.Color(255, 255, 255));
        lblSubTitle2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSubTitle2.setText("Create New Course");

        lblCourseName.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        lblCourseName.setForeground(new java.awt.Color(255, 255, 255));
        lblCourseName.setText("Course Name:");

        txtCourseName.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        lblCourseId.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        lblCourseId.setForeground(new java.awt.Color(255, 255, 255));
        lblCourseId.setText("Course ID:");

        txtCourseId.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txtCourseId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCourseIdActionPerformed(evt);
            }
        });

        lblCredits.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        lblCredits.setForeground(new java.awt.Color(255, 255, 255));
        lblCredits.setText("Credits:");

        txtCredits.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        lblSemester.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        lblSemester.setForeground(new java.awt.Color(255, 255, 255));
        lblSemester.setText("Semester:");

        txtSemester.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        btnAddCourse.setBackground(new java.awt.Color(0, 153, 255));
        btnAddCourse.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnAddCourse.setForeground(new java.awt.Color(255, 255, 255));
        btnAddCourse.setText("Add Course");
        btnAddCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCourseActionPerformed(evt);
            }
        });

        btnUpdateCourse.setBackground(new java.awt.Color(0, 153, 255));
        btnUpdateCourse.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnUpdateCourse.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateCourse.setText("Update Course");
        btnUpdateCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCourseActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(0, 153, 255));
        btnSave.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnBack.setBackground(java.awt.Color.pink);
        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnDeleteCourse.setBackground(new java.awt.Color(0, 153, 255));
        btnDeleteCourse.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnDeleteCourse.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteCourse.setText("Delete Course");
        btnDeleteCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCourseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(lblSubTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(76, 76, 76))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lblSubTitle2, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addGap(116, 116, 116)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnAddCourse)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblCourseName)
                                            .addComponent(lblCourseId)
                                            .addComponent(lblCredits)
                                            .addComponent(lblSemester))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtCredits, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(109, 109, 109)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdateCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDeleteCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(317, 317, 317))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblSubTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblSubTitle2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCourseName)
                    .addComponent(txtCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateCourse))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCourseId))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCredits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCredits)
                    .addComponent(btnSave))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSemester))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack)
                    .addComponent(btnDeleteCourse)
                    .addComponent(btnAddCourse))
                .addContainerGap(36, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCourseActionPerformed

        if (txtCourseName.getText().equals("") || txtCourseId.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Course cannot be created! Enter course name and ID");
        } else {
            String courseName = txtCourseName.getText();
            String courseID = txtCourseId.getText();
            String courseTerm = txtSemester.getText();

            Course course = new Course();
            course.setCourseName(courseName);
            course.setCourseID(courseID);
            course.setTermOfferedIn(courseTerm);
            course.setCreditHours(txtCredits.getText());
            course.setProfessorProfile(professorProfile);

            CourseDirectory courseDir = business.getCourseDirectory();
            courseDir.addCourse(course);

            JOptionPane.showMessageDialog(null, "Course successfully created!");

            System.out.println("Adding Course");
            populateTable();
            txtCourseId.setText("");
            txtCourseName.setText("");
            txtSemester.setText("");
            txtCredits.setText("");
        }

    }//GEN-LAST:event_btnAddCourseActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).previous(CardSequencePanel); //navigates back to previous page

        ProfessorLandingPageJPanel profLandingPageJPanel = new ProfessorLandingPageJPanel(business, professorProfile, CardSequencePanel);
        CardSequencePanel.removeAll();
        CardSequencePanel.add("ProfessorLandingPageJPanel", profLandingPageJPanel);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);

    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        int selectedRow = tblAllCoursesTable.getSelectedRow();
        Course course = business.getCourseDirectory().getCourseCatalog().get(selectedRow);

        course.setCourseName(txtCourseName.getText());
        course.setCourseID(txtCourseId.getText());
        course.setTermOfferedIn(txtSemester.getText());
        course.setCreditHours(txtCredits.getText());
        btnSave.setEnabled(false);
        System.out.println("Updating selected course");

        populateTable();
        btnSave.setEnabled(false);
        btnSave.setVisible(false);
        btnAddCourse.setEnabled(true);
        btnAddCourse.setVisible(true);
        txtCourseId.setText("");
        txtCourseName.setText("");
        txtSemester.setText("");
        txtCredits.setText("");

        JOptionPane.showMessageDialog(null, "Course updated successfully!");
        System.out.println("Course updated successfully!");
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCourseActionPerformed

        btnSave.setVisible(true);
        btnAddCourse.setEnabled(false);
        btnAddCourse.setVisible(false);
        txtCourseName.setEnabled(true);
        txtCourseId.setEnabled(true);
        txtSemester.setEnabled(true);
        txtCredits.setEnabled(true);

        int selectedRow = tblAllCoursesTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first",
                    "Warning", JOptionPane.WARNING_MESSAGE);

        } else {

            Course course = business.getCourseDirectory().getCourseCatalog().get(selectedRow);
            txtCourseName.setText(course.getCourseName());
            txtCourseId.setText(course.getCourseID());
            txtSemester.setText(course.getTermOfferedIn());
            txtCredits.setText(course.getCreditHours());
            System.out.println("Make changes to selected course");
        }

    }//GEN-LAST:event_btnUpdateCourseActionPerformed

    private void txtCourseIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCourseIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCourseIdActionPerformed

    private void btnDeleteCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCourseActionPerformed

        int selectedRow = tblAllCoursesTable.getSelectedRow();
        if (selectedRow >= 0) {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null,
                    "Would you like to delete the account details?", "Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                Course course = business.getCourseDirectory().getCourseCatalog().get(selectedRow);
                business.getCourseDirectory().deleteCourse(course);
                System.out.println("Deleted selected course");
                populateTable();
            }
        } else
            JOptionPane.showMessageDialog(null, "Please select a row to delete",
                    "Warning", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnDeleteCourseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCourse;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteCourse;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdateCourse;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblCourseId;
    private javax.swing.JLabel lblCourseName;
    private javax.swing.JLabel lblCredits;
    private javax.swing.JLabel lblSemester;
    private javax.swing.JLabel lblSubTitle1;
    private javax.swing.JLabel lblSubTitle2;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblAllCoursesTable;
    private javax.swing.JTextField txtCourseId;
    private javax.swing.JTextField txtCourseName;
    private javax.swing.JTextField txtCredits;
    private javax.swing.JTextField txtSemester;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {

        DefaultTableModel dtm = (DefaultTableModel) tblAllCoursesTable.getModel();
        dtm.setRowCount(0);
        for (Course course : business.getCourseDirectory().getCourseCatalog()) {
            if (course.getProfessorProfile().getPerson().getName().equals(professorProfile.getPerson().getName())) {

                Object[] row = new Object[5];
                row[0] = course.getCourseID();
                row[1] = course.getCourseName();
                row[2] = course.getCreditHours();
                row[3] = course.getTermOfferedIn();
                row[4] = course.getProfessorProfile().getPerson().getName();

                dtm.addRow(row);
            }
        }
        System.out.println("Table Popuplated");
    }
}
