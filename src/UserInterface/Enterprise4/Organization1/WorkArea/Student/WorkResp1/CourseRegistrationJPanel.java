/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Enterprise4.Organization1.WorkArea.Student.WorkResp1;

import TheBusiness.Business.Business;
import TheBusiness.CourseManagement.Course;
import TheBusiness.EducationManagement.ProfessorDirectory;
import TheBusiness.EducationManagement.ProfessorProfile;
import TheBusiness.EducationManagement.StudentProfile;
import UserInterface.Enterprise4.Organization1.WorkArea.Student.StudentLandingPageJPanel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aadityakasbekar
 */
public class CourseRegistrationJPanel extends javax.swing.JPanel {

    Business business;
    StudentProfile studentProfile;
    javax.swing.JPanel CardSequencePanel;

    /**
     * Creates new form CourseRegistrationJPanel
     */
    public CourseRegistrationJPanel(Business b, StudentProfile spp, javax.swing.JPanel cpl) {
        initComponents();
        this.business = b;
        this.studentProfile = spp;
        this.CardSequencePanel = cpl;
        populateTable();

        System.out.println("Select course to register from the table.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblSubTitle1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAllOfferedCoursesTable = new javax.swing.JTable();
        btnRegisterCourse = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(0, 0, 0));
        setMinimumSize(new java.awt.Dimension(1000, 425));

        lblTitle.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Course Registration");

        lblSubTitle1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblSubTitle1.setForeground(new java.awt.Color(255, 255, 255));
        lblSubTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSubTitle1.setText("View All Courses");

        jScrollPane1.setFont(new java.awt.Font("Times New Roman", 0, 10)); // NOI18N

        tblAllOfferedCoursesTable.setFont(new java.awt.Font("Times New Roman", 0, 10)); // NOI18N
        tblAllOfferedCoursesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Course ID", "Course Name", "Credits", "Offered In", "Instructor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAllOfferedCoursesTable);

        btnRegisterCourse.setBackground(new java.awt.Color(0, 153, 255));
        btnRegisterCourse.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnRegisterCourse.setForeground(new java.awt.Color(255, 255, 255));
        btnRegisterCourse.setText("Register!!!");
        btnRegisterCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterCourseActionPerformed(evt);
            }
        });

        btnBack.setBackground(java.awt.Color.pink);
        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(842, 842, 842))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(lblSubTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRegisterCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(69, 69, 69))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 851, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblSubTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRegisterCourse)
                .addGap(16, 16, 16)
                .addComponent(btnBack)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).previous(CardSequencePanel); //navigates back to previous page

        
        StudentLandingPageJPanel studentLandingPage = new StudentLandingPageJPanel(business, studentProfile, CardSequencePanel);
        CardSequencePanel.removeAll();
        CardSequencePanel.add("studentLandingPage", studentLandingPage);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRegisterCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterCourseActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = tblAllOfferedCoursesTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first",
                    "Warning", JOptionPane.WARNING_MESSAGE);

        } else {

            Course course = business.getCourseDirectory().getCourseCatalog().get(selectedRow);
            if (course == null) {
                JOptionPane.showMessageDialog(null, "Course Not Found.", "Information", JOptionPane.INFORMATION_MESSAGE);
                System.out.println("Course does not exist");
            } else {
                studentProfile.enrollToCourse(course);
                ProfessorProfile professorProfile = course.getProfessorProfile();
                ProfessorDirectory professorDir = business.getProfessorDirectory();

                ProfessorProfile professorProfileRef = professorDir.findProfessor(professorProfile.getPerson().getPersonId());
                professorProfileRef.addStudentToClass(studentProfile);
                JOptionPane.showMessageDialog(null, "Registered To the Course", "Information", JOptionPane.INFORMATION_MESSAGE);
                
                System.out.println("Registerd to the selected course");
                populateTable();
                
                for (Course c : studentProfile.getRegisteredCourseList()) {
                    System.out.println("Registered to the courses:" + c);
                }
            }

        }
    }//GEN-LAST:event_btnRegisterCourseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRegisterCourse;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSubTitle1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblAllOfferedCoursesTable;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        System.out.println("Populating the table.");
        
        DefaultTableModel dtm = (DefaultTableModel) tblAllOfferedCoursesTable.getModel();
        dtm.setRowCount(0);
        for (Course course : business.getCourseDirectory().getCourseCatalog()) {
            
            System.out.println(course.getCourseName());
            System.out.println(course.getProfessorProfile().getPerson().getName());

            Object[] row = new Object[5];
            row[0] = course.getCourseID();
            row[1] = course.getCourseName();
            row[2] = course.getCreditHours();
            row[3] = course.getTermOfferedIn();
            row[4] = course.getProfessorProfile().getPerson().getName();

            dtm.addRow(row);
        }
    }
}
